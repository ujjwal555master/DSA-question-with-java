Question 11:- https://leetcode.com/problems/jump-game/?envType=study-plan-v2&envId=top-interview-150

Input: nums = [2,3,1,1,4]
Output: true
Explanation: Jump 1 step from index 0 to 1, then 3 steps to the last index.

To solve this problem we use greedy approach
jump            =   2, 3, 1, 0, 4
index           =   0  1  2  3  4

start index 0 , create maximum_index=0

1. take 2       -->     0+2=2           maximum_index= 0 --> 2
2. take 3       -->     1+3=4           maximum_index= 2 --> 4
3. take 1       -->     2+2=2           maximum_index= 4
4. take 2       -->     3+2=2           maximum_index= 4
5. take 4       -->     4+4=2           maximum_index= 4

code:- 
class Solution {
    public boolean canJump(int[] nums) {
        int max_index = 0;

        for(int i=0; i<nums.length; i++){
            if(nums[i]==0 && max_index==i && i<nums.length-1){
                return false;
            }
            max_index = Math.max(max_index, i+nums[i]);
        }

        return true;
    }
}


